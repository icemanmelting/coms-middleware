{:api-server #profile {:default {:port 8181}
                       :staging {:port 8181}
                       :production {:port 8181}}
 :steps #profile {:default {:tx-manager {:type :mem
                                         :conf {:file "/Users/iceman/Desktop/transactions.bin"}}
                            :global-state-manager {:type :mem
                                                   :conf {}}
                            :processing-type :local
                            :queue-conf {:buffer-size 100}
                            :sources [{:name "socket-receiver"
                                       :tx {:fail-fast? true
                                            :clean-up-fn (fn [_ _])
                                            :retries 0}
                                       :buffer-size 3
                                       :port 9887
                                       :connects-to "basecommand-grinder"
                                       :type coms-middleware.core/map->SocketServerSource
                                       :threads 1}]
                            :grinders [{:name "basecommand-grinder"
                                        :tx {:fail-fast? true
                                             :clean-up-fn (fn [_ _])
                                             :retries 2}
                                        :car-id "0ffb0099-92b2-41dd-a5c1-b7893b1f93a5"
                                        :db-cfg {:dbtype "postgres"
                                                 :dbname "test"
                                                 :host "127.0.0.1"
                                                 :port 5432
                                                 :user "postgres"
                                                 :password "postgres"}
                                        :connects-to "dashboard-sink"
                                        :type coms-middleware.core/map->BaseCommandGrinder
                                        :poll-frequency 1
                                        :time-unit "ms"
                                        :threads 1}]
                            :sinks [{:name "dashboard-sink"
                                     :tx {:fail-fast? true
                                          :clean-up-fn (fn [_ _])
                                          :retries 0}
                                     :destination-host "192.168.1.245"
                                     :destination-port 4444
                                     :poll-frequency 1
                                     :time-unit "ms"
                                     :type coms-middleware.core/map->DashboardSink
                                     :threads 1}
                                    {:name "jdbc-sink"
                                     :tx {:fail-fast? true
                                          :clean-up-fn (fn [_ _])
                                          :retries 0}
                                     :car-id "the-car-id"
                                     :db-name "twitter"
                                     :db-cfg {:dbtype "postgres"
                                              :dbname "test"
                                              :host "127.0.0.1"
                                              :port 5432
                                              :user "postgres"
                                              :password "postgres"}
                                     :fns {:x-fn coms-middleware.core/add-to-db}
                                     :type clojure-data-grinder-core.protocols.impl/map->JDBCSink
                                     :poll-frequency 1
                                     :time-unit "ms"
                                     :threads 1}]
                            :jobs [{:name "dummy-job"
                                    :tx {:fail-fast? false
                                         :clean-up-fn (fn [_ _])
                                         :retries 0}
                                    :schedule "/30 * * * * * *"
                                    :connects-to "jdbc-sink"
                                    :fns {:x-fn coms-middleware.core/save-base-command}}]
                            :error-sink {:fns {:x-fn (fn [_ _ e] (clojure.tools.logging/error "Error found" e))}
                                         :poll-frequency 500
                                         :time-unit "ms"
                                         :threads 1}}
                  :staging {}
                  :production {}}}